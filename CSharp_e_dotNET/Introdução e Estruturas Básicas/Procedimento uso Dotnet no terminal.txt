MÉTODOS PARA EXECUÇÃO DO CÓDIGO C# VIA TERMINAL

    1 - Utilizando o compilador e executador MONO.

    Após instalar o compilador/executador MONO, seguir os seguintes passos no terminal:
        - Criar um arquivo em C# e montar o programa:
        - Digitar o comando para compilação -> csc 'nomedoarquivo.cs'
        - Verifique se há algum erro de sintaxe definido pelo compilador e corrija.
        - Estando tudo correto, o compilador vai gerar um arquivo .exe -> 'nomedoarquivo.exe'
        - Digitar o comando para execução no terminal(console) -> mono 'nomedoarquivo.exe'

    2 - Utilizando o ambiente de compilação e execução DOTNET.

    Após instalado, crie uma pasta onde estará o código do programa e siga os passos no terminal:
        - Dentro da pasta do código, digitar o comando para checar se foi instalado corretamente -> dotnet --version 
        - Digitar o comando para criar um 'projeto C#' dentro da pasta para execução do código -> dotnet new console
        - Digitar o comando para executar o código -> dotnet run
        - Dessa forma ele irá executar o código dentro do arquivo gerado, Program.cs.

    Perceba que ele neste método o 'dotnet' somente executa o código principal da pasta. 
    Se você criar mais arquivos de código (formato .cs) eles não serão executados, nem compilados.

INSTALAÇÃO DE PACOTES PARA UMA APLICAÇÃO ASP.NET CORE MVC

    Pacotes para conexão com BANCO DE DADOS e IMPLEMENTAÇÃO do programa.
        Digitar os comandos abaixo:
        -> dotnet add package Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation
        -> dotnet add package Microsoft.EntityFrameworkCore.SqlServer
        -> dotnet add package Microsoft.EntityFrameworkCore.Tools
        -> dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design

CRIANDO CONEXÃO COM O SQLSERVER COM UMA APLICAÇÃO ASP.NET CORE MVC

    Ir na pasta do projeto APLICAÇÃO ASP.NET CORE MVC e abrir o arquivo 'appsettings.json'

        - Adicionar no início:
        {
            "ConnectionStrings": {
            "ConnDB": "Server= NOME DO SERVIDOR SQLSERVER; 
            Database= NOME DO BANCO DE DADOS;
            User ID= NOME DO USUSARIO; 
            Password= SENHA;
            Trusted_Connection=false;
            MultipleActiveResultSets=true"
            },
        }     

        - Caso não exista usuário e senha, é só retirar os valores do atributo do Objeto JSON. Ex.:
        {
            "ConnectionStrings": {
            "ConnDB": "Server= NOME DO SERVIDOR SQLSERVER; 
            Database= NOME DO BANCO DE DADOS;
            Trusted_Connection=false;
            MultipleActiveResultSets=true"
            },
        }     
    
